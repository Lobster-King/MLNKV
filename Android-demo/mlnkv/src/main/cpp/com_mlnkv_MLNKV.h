/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_mlnkv_MLNKV */

#ifndef _Included_com_mlnkv_MLNKV
#define _Included_com_mlnkv_MLNKV
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    initMLNKV
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_mlnkv_MLNKV_initMLNKV
        (JNIEnv *env, jobject obj, jstring path);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    destoryMLNKV
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_mlnkv_MLNKV_destoryMLNKV
        (JNIEnv *env, jobject obj, jlong mlnkv);


/*
 * Class:     com_mlnkv_MLNKV
 * Method:    setBytes
 * Signature: (J[BJLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mlnkv_MLNKV_setBytes
        (JNIEnv *env, jobject obj, jlong mlnkv, jbyteArray value, jlong length, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    setString
 * Signature: (JLjava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mlnkv_MLNKV_setString
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring value, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    setBool
 * Signature: (JLjava/lang/Boolean;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mlnkv_MLNKV_setBool
        (JNIEnv *env, jobject obj, jlong mlnkv, jboolean value, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    setInt32
 * Signature: (JILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mlnkv_MLNKV_setInt32
        (JNIEnv *env, jobject obj, jlong mlnkv, jint value, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    setInt64
 * Signature: (JJLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mlnkv_MLNKV_setInt64
        (JNIEnv *env, jobject obj, jlong mlnkv, jlong value, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    setFloat
 * Signature: (JFLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mlnkv_MLNKV_setFloat
        (JNIEnv *env, jobject obj, jlong mlnkv, jfloat value, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    setDouble
 * Signature: (JDLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mlnkv_MLNKV_setDouble
        (JNIEnv *env, jobject obj, jlong mlnkv, jdouble value, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    getBytes
 * Signature: (JLjava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mlnkv_MLNKV_getBytes
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    getString
 * Signature: (JLjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_mlnkv_MLNKV_getString
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    getBool
 * Signature: (JLjava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mlnkv_MLNKV_getBool
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring key, jboolean defaultValue);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    getInt32
 * Signature: (JLjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_mlnkv_MLNKV_getInt32
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring key, jint defaultValue);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    getInt64
 * Signature: (JLjava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_com_mlnkv_MLNKV_getInt64
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring key, jlong defaultValue);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    getFloat
 * Signature: (JLjava/lang/String;F)F
 */
JNIEXPORT jfloat JNICALL Java_com_mlnkv_MLNKV_getFloat
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring key, jfloat defaultValue);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    getDouble
 * Signature: (JLjava/lang/String;D)D
 */
JNIEXPORT jdouble JNICALL Java_com_mlnkv_MLNKV_getDouble
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring key, jdouble defaultValue);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    getVauleSize
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_mlnkv_MLNKV_getVauleSize
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    containsKey
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mlnkv_MLNKV_containsKey
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    count
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_mlnkv_MLNKV_count
        (JNIEnv *env, jobject obj, jlong mlnkv);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    totalUserdSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_mlnkv_MLNKV_totalUsedSize
        (JNIEnv *env, jobject obj, jlong mlnkv);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    fileSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_mlnkv_MLNKV_fileSize
        (JNIEnv *env, jobject obj, jlong mlnkv);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    filePath
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_mlnkv_MLNKV_filePath
        (JNIEnv *env, jobject obj, jlong mlnkv);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    allKeys
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobjectArray JNICALL Java_com_mlnkv_MLNKV_allKeys
        (JNIEnv *env, jobject obj, jlong mlnkv);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    remove
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mlnkv_MLNKV_remove
        (JNIEnv *env, jobject obj, jlong mlnkv, jstring key);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    clearAll
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_mlnkv_MLNKV_clearAll
        (JNIEnv *env, jobject obj, jlong mlnkv);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    trim
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_mlnkv_MLNKV_trim
        (JNIEnv *env, jobject obj, jlong mlnkv);

/*
 * Class:     com_mlnkv_MLNKV
 * Method:    sync
 * Signature: (JLjava/lang/Boolean;)V
 */
JNIEXPORT void JNICALL Java_com_mlnkv_MLNKV_sync
        (JNIEnv *env, jobject obj, jlong mlnkv, jboolean isSync);

#ifdef __cplusplus
}
#endif
#endif
